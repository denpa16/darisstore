release:backend:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main|develop)$/
      changes:
        - backend/**/*
        - .gitlab-ci.yml
        - gitlab/release.yml
        - docker-compose.yml
        - docker-compose.production.yml
  script:
    - TAG=${CI_COMMIT_SHA} docker compose -f docker-compose.yml -f docker-compose.production.yml pull backend
    - docker tag ${CI_REGISTRY_IMAGE}/backend:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}/backend:${CI_COMMIT_REF_SLUG}
    - TAG=${CI_COMMIT_REF_SLUG} docker compose -f docker-compose.yml -f docker-compose.production.yml push backend
  needs: ["test:backend"]

release:frontend:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main|develop)$/
      changes:
        - frontend/**/*
        - .gitlab-ci.yml
        - gitlab/release.yml
        - docker-compose.yml
        - docker-compose.production.yml
        - docker-compose.frontend.yml
  script:
    - TAG=${CI_COMMIT_SHA} docker compose -f docker-compose.yml -f docker-compose.production.yml -f docker-compose.frontend.yml pull frontend
    - docker tag ${CI_REGISTRY_IMAGE}/frontend:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}/frontend:${CI_COMMIT_REF_SLUG}
    - TAG=${CI_COMMIT_REF_SLUG} docker compose -f docker-compose.yml -f docker-compose.production.yml -f docker-compose.frontend.yml push frontend
  needs: ["build:frontend"]

release:nginx:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main|develop)$/
      changes:
        - nginx/**/*
        - .gitlab-ci.yml
        - gitlab/release.yml
        - docker-compose.yml
        - docker-compose.production.yml
  script:
    - TAG=${CI_COMMIT_SHA} docker compose -f docker-compose.yml -f docker-compose.production.yml pull nginx
    - docker tag ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}/nginx:${CI_COMMIT_REF_SLUG}
    - TAG=${CI_COMMIT_REF_SLUG} docker compose -f docker-compose.yml -f docker-compose.production.yml push nginx
  needs: ["build:nginx"]

release:db:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main|develop)$/
      changes:
        - db/**/*
  script:
    - TAG=${CI_COMMIT_SHA} docker compose -f docker-compose.yml -f docker-compose.production.yml pull db
    - docker tag ${CI_REGISTRY_IMAGE}/db:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}/db:${CI_COMMIT_REF_SLUG}
    - TAG=${CI_COMMIT_REF_SLUG} docker compose -f docker-compose.yml -f docker-compose.production.yml push db
  needs: ["build:db"]

release:flower:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main|develop)$/
      changes:
        - flower/**/*
        - .gitlab-ci.yml
        - gitlab/release.yml
        - docker-compose.yml
        - docker-compose.production.yml
  script:
    - TAG=${CI_COMMIT_SHA} docker compose -f docker-compose.yml -f docker-compose.production.yml pull flower
    - docker tag ${CI_REGISTRY_IMAGE}/flower:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}/flower:${CI_COMMIT_REF_SLUG}
    - TAG=${CI_COMMIT_REF_SLUG} docker compose -f docker-compose.yml -f docker-compose.production.yml push flower
  needs: ["build:flower"]

release:imgproxy:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main|develop)$/
      changes:
        - imgproxy/**/*
        - .gitlab-ci.yml
        - gitlab/release.yml
        - docker-compose.yml
        - docker-compose.production.yml
  script:
    - TAG=${CI_COMMIT_SHA} docker compose -f docker-compose.yml -f docker-compose.production.yml pull imgproxy
    - docker tag ${CI_REGISTRY_IMAGE}/imgproxy:${CI_COMMIT_SHA} ${CI_REGISTRY_IMAGE}/imgproxy:${CI_COMMIT_REF_SLUG}
    - TAG=${CI_COMMIT_REF_SLUG} docker compose -f docker-compose.yml -f docker-compose.production.yml push imgproxy
  needs: ["build:imgproxy"]
