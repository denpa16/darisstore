test:backend:
  stage: test
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/backend:${CI_COMMIT_SHA}
    - >
      TAG=${CI_COMMIT_SHA} docker-compose -f docker-compose.yml -f docker-compose.test.yml
      run --rm backend /bin/sh -c "poetry run pytest --migrations -p no:warnings --cov-report term:skip-covered --cov --cov-fail-under=${TESTS_COVERAGE_LEVEL}"
    - docker compose -f docker-compose.yml -f docker-compose.test.yml stop || true
    - docker compose -f docker-compose.yml -f docker-compose.test.yml rm -s -v || true
    - docker compose -f docker-compose.yml -f docker-compose.test.yml down -v || true
  needs: ["build:backend"]
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main|develop)$/ && $SKIP_TESTING == "false"
      changes:
        - backend/**/*
        - .gitlab-ci.yml
        - docker-compose.yml
        - docker-compose.production.yml

test:frontend:
  stage: test
  variables:
    BASE_URL: ${SITE_HOST}
  image: mcr.microsoft.com/playwright:v1.42.1-jammy
  script:
    - npm ci # Install project dependencies
    - npx playwright test # Run your Playwright tests
    - echo "https://gitlab.idacloud.ru/-/$CI_PROJECT_NAME/-/jobs/$CI_JOB_ID/artifacts/playwright-report/index.html" # print the URL to view the results
  allow_failure: true
  artifacts:
    when: always
    paths:
      - playwright-report
    expire_in: 2 days
  needs: ["build:frontend"]
  rules:
    - if: $CI_COMMIT_BRANCH =~ /^(main|develop)$/ && $SKIP_TESTING == "false"
      changes:
        - frontend/**/*
